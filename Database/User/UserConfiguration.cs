using Domain.ValueObjects.User;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Database.User {
    public sealed class UserConfiguration : IEntityTypeConfiguration<UserModel> {
        public void Configure(EntityTypeBuilder<UserModel> builder) {
            // Map UserModel to Users table
            builder.ToTable("Users");

            // Say that id is generated key
            builder.HasKey(u => u.Id);
            builder.Property(u => u.Id).ValueGeneratedOnAdd().UseIdentityAlwaysColumn();

            // Say that user email is unique
            builder.HasIndex(u => u.Email).IsUnique();
            
            // Say that username is unique
            builder.HasIndex(u => u.Username).IsUnique();
            
            // Say that profile image is not required
            builder.Property(u => u.ProfileImagePath).IsRequired(false);
            
            // Say that CreatedAt is autogenerated 
            // readonly field
            builder
                .Property(u => u.CreatedAt)
                .HasDefaultValueSql("now()")
                .Metadata.SetAfterSaveBehavior(PropertySaveBehavior.Ignore);
            
            // Set default theme
            builder
                .Property(u => u.Theme)
                .HasDefaultValue(Theme.Light);
            
            // Say that User have one-to-many relation ship with links
            builder
                .HasMany(u => u.Links)
                .WithOne()
                .HasForeignKey(l => l.UserId);
        }
    }
}